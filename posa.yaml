version: "3.4"

services:

  Posa1:
    image: "webcgi/coin:openposa"
    tty: true
    ports:
      - 8647:8647
      - 30315:30315
      - 10646:10646
    environment:
      ENV: ETHERNODE1
      RPCPORT: 8647
      PORT: 30315
      RUST_BACKTRACE: 1
    volumes:
      - ./config1.toml:/openethereum/config.toml
      - ./genesis.json:/openethereum/genesis.json
      - ./password:/openethereum/password
      - ./nodes:/openethereum/nodes
      - ./keys1:/openethereum/keys
    container_name: Posa1
    command: >
      sh -c "cd ~/
            /openethereum/target/release/openethereum --config /openethereum/config.toml"
    working_dir: /openethereum


  Posa2:
    image: "webcgi/coin:openposa"
    tty: true
    ports:
      - 8648:8648
      - 30316:30316
      - 10647:10647
    environment:
      ENV: ETHERNODE1
      RPCPORT: 8648
      PORT: 30316
      RUST_BACKTRACE: 1
    volumes:
      - ./config1.toml:/openethereum/config.toml
      - ./genesis.json:/openethereum/genesis.json
      - ./password:/openethereum/password
      - ./nodes:/openethereum/nodes
      - ./keys2:/openethereum/keys
    container_name: Posa2
    command: >
      sh -c "cd ~/
            /openethereum/target/release/openethereum --config /openethereum/config.toml"
    working_dir: /openethereum

  Posa3:
    image: "webcgi/coin:openposa"
    tty: true
    ports:
      - 8649:8649
      - 30317:30317
      - 10648:10648
    environment:
      ENV: ETHERNODE1
      RPCPORT: 8649
      PORT: 30317
      RUST_BACKTRACE: 1
    volumes:
      - ./config1.toml:/openethereum/config.toml
      - ./genesis.json:/openethereum/genesis.json
      - ./password:/openethereum/password
      - ./keys3:/openethereum/keys
      - ./nodes:/openethereum/nodes
    container_name: Posa3
    command: >
      sh -c "cd ~/
            /openethereum/target/release/openethereum --config /openethereum/config.toml"
    working_dir: /openethereum

  Posa4:
    image: "webcgi/coin:openposa"
    tty: true
    ports:
      - 8650:8650
      - 30318:30318
      - 10649:10649
    environment:
      ENV: ETHERNODE1
      RPCPORT: 8650
      PORT: 30318
      RUST_BACKTRACE: 1
    volumes:
      - ./config1.toml:/openethereum/config.toml
      - ./genesis.json:/openethereum/genesis.json
      - ./password:/openethereum/password
      - ./nodes:/openethereum/nodes
      - ./keys4:/openethereum/keys
    container_name: Posa4
    command: >
      sh -c "cd ~/
            /openethereum/target/release/openethereum --config /openethereum/config.toml"
    working_dir: /openethereum


  # entry1_2:
  #   image: "nara7875/etcexplorer:5"
  #   ports:
  #     - 3011:3000
  #   restart: always
  #   depends_on:
  #     - db_1
  #   links:
  #     - pos1_1:pos1_1
  #   volumes:
  #     - ./config1.json:/config.json
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"      
  #   environment:
  #     MONGO_URI: mongodb://host.docker.internal/blockDB
  #   command : bash -c "/wait-for-it.sh -h mongo -p 27017 -t 20 -- npm run start"
  
  Scan2:
    image: "webcgi/coin:scan"
    ports:
      - 3012:3000
    restart: always
    depends_on:
      - Db1
    links:
      - Posa1:Posa1
    volumes:
      - ./config1.json:/config.json
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      MONGO_URI: mongodb://host.docker.internal/blockDB
    command : bash -c "/wait-for-it.sh -h mongo -p 27017 -t 30 -- npm run start"
  
  # entry3_2:
  #   image: "nara7875/etcexplorer:5"
  #   ports:
  #     - 3013:3000
  #   restart: always
  #   depends_on:
  #     - db_1
  #   links:
  #     - pos3_1:pos3_1
  #   volumes:
  #     - ./config3.json:/config.json
  #     - ./ONE.png:/public/img/explorer-logo.png
  #     - ./explorer1/favicon.ico:/public/favicon.ico
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   environment:
  #     MONGO_URI: mongodb://host.docker.internal/ONE1
  #   command : bash -c "/wait-for-it.sh -h mongo -p 27017 -t 20 -- npm run start"
  
  # entry4_2:
  #   image: "nara7875/etcexplorer:5"
  #   ports:
  #     - 3014:3000
  #   restart: always
  #   depends_on:
  #     - db_1
  #   links:
  #     - pos4_1:pos4_1
  #   volumes:
  #     - ./config4.json:/config.json
  #     - ./HEINI1.png:/public/img/explorer-logo.png
  #     - ./explorer1/favicon.ico:/public/favicon.ico
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   environment:
  #     MONGO_URI: mongodb://host.docker.internal/HEINI1
  #   command : bash -c "/wait-for-it.sh -h mongo -p 27017 -t 20 -- npm run start"
  
  Db1:
    image: "webcgi/coin:mongo"
    depends_on:
      - Posa1
      - Posa2
      - Posa3
      - Posa4
    ports: 
      - 27017:27017
    volumes:
      - ./data:/data/db
    environment:
      MONGO_INITDB_DATABASE: "[blockDB, GGOM1, HEINI1, ONE1]"